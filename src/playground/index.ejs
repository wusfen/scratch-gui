<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"
        />
        <meta name="google" value="notranslate" />
        <link rel="shortcut icon" href="static/favicon.ico" />
        <title>豌豆编程</title>
        <base href="<%= htmlWebpackPlugin.options.PUBLIC_PATH %>" />
        <script>
            // fix <base> pushState
            history._pushState = history.pushState;
            history.pushState = function (state, title, url) {
                url = /:\/\//.test(url)
                    ? url
                    : location.origin + String(url).replace(/^\/?/, "/");
                return history._pushState.apply(this, arguments);
            };
        </script>

        <script>
            function loadConsole() {
                if (loadConsole.yes) return;
                loadConsole.yes = true;

                var src =
                    "https://cdn.jsdelivr.net/gh/wusfen/console.js@master/dist/console.js";
                if (document.readyState == "complete") {
                    var script = document.createElement("script");
                    script.src = src;
                    document.body.appendChild(script);
                } else {
                    document.write("<script src=" + src + "><\/script>");
                }
            }

            if ("ontouchstart" in window) {
                if (/\/(dev|uat)\/|[?&#]f12\b/.test(location)) {
                    loadConsole();
                    console.f12 = 1;
                }
            }

            addEventListener("touchstart", function (e) {
                if (e.touches && e.touches.length >= 6) {
                    loadConsole();
                    console.f12 = 2;
                }
            });
        </script>

        <script>
            function resize() {
                document.documentElement.style.setProperty(
                    "--STAGE_CSS_WIDTH",
                    Math.min(
                        375,
                        266 / (1024 / window.innerWidth),
                        266 / (768 / window.innerHeight)
                    )
                );
            }
            resize();
            addEventListener("resize", resize);
        </script>

        <script>
            // arrayBuffer polyfill
            (function () {
                File.prototype.arrayBuffer =
                    File.prototype.arrayBuffer || myArrayBuffer;
                Blob.prototype.arrayBuffer =
                    Blob.prototype.arrayBuffer || myArrayBuffer;

                function myArrayBuffer() {
                    var blob = this;
                    return new Promise(function (resolve) {
                        let fr = new FileReader();
                        fr.onload = function (e) {
                            resolve(fr.result);
                        };
                        fr.readAsArrayBuffer(blob);
                    });
                }
            })();
        </script>
    </head>

    <body></body>
</html>
